# This is a basic workflow to help you get started with Actions

name: Prod - Deploy to S3

# Controls when the action will run. 
on:
  push:
    branches: *

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    environment: Prod
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      
      - name: AWS CLI
        run: dotnet tool install -g Amazon.Lambda.Tools

      - name: Restore dependencies
        run: dotnet restore
    
      - name: Build
        run: dotnet build -c Release --no-restore
      
      - name: Deploy to Lambda
        working-directory: ./src/StaplePuck.API4
        run: dotnet lambda deploy-serverless -sn staplepuckapi-prod -tp Auth0__Audience=$Auth0__Audience,Auth0__ClientId=${{ secrets.Auth0__ClientId }},Auth0__ClientSecret=${{ secrets.Auth0__ClientSecret }},Auth0__TokenUrl=$Auth0__TokenUrl,Auth0API__Audience=$Auth0API__Audience,Auth0API__ClientId=${{ secrets.Auth0API__ClientId }},Auth0API__ClientSecret=${{ secrets.Auth0API__ClientSecret }},Auth0API__Domain=$Auth0API__Domain,Authorization__BaseUrl=$Authorization__BaseUrl,Authorization__SiteName=$Authorization__SiteName,ConnectionStrings__Default=${{ secrets.ConnectionStrings__Default }},AWS__StatsUpdatedTopicARN=$AWS__StatsUpdatedTopicARN,AWS__ScoreUpdatedTopicARN=$AWS__ScoreUpdatedTopicARN
      # - name: Pack
      #   run: dotnet pack src/Orleans.SyncWork/Orleans.SyncWork.csproj -c Release --no-restore --no-build --include-symbols -p:SymbolPackageFormat=snupkg -o .

      # - name: Push to NuGet
      #   run: dotnet nuget push *.nupkg --skip-duplicate -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}}