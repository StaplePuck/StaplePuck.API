# This is a basic workflow to help you get started with Actions

name: Prod - Build and Deploy

# Controls when the action will run. 
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    environment: Prod
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4
        with:
            fetch-depth: 0
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      - name: AWS CLI
        run: dotnet tool install -g Amazon.Lambda.Tools
      
      - name: Install Nuget
        uses: nuget/setup-nuget@v2
        with:        
            nuget-version: '5.x'

      - name: Restore dependencies
        run: dotnet restore
    
      - name: Build
        run: dotnet build -c Release --no-restore
      
      - name: Deploy to AWS
        working-directory: ./src/StaplePuck.API4
        run: dotnet lambda deploy-serverless -sn prod-staplepuck-api -tp 'Auth0Audience="${{ vars.Auth0__Audience }}";Auth0ClientId="${{ secrets.Auth0__ClientId }}";Auth0ClientSecret="${{ secrets.Auth0__ClientSecret }}";Auth0TokenUrl="${{ vars.Auth0__TokenUrl }}";Auth0APIAudience="${{ vars.Auth0API__Audience }}";Auth0APIClientId="${{ secrets.Auth0API__ClientId }}";Auth0APIClientSecret="${{ secrets.Auth0API__ClientSecret }}";Auth0APIDomain="${{ vars.Auth0API__Domain }}";AuthorizationBaseUrl="${{ vars.Authorization__BaseUrl }}";AuthorizationSiteName="${{ vars.Authorization__SiteName }}";ConnectionStringsDefault="${{ secrets.ConnectionStrings__Default }}";AWSStatsUpdatedTopicARN="${{ vars.AWS__StatsUpdatedTopicARN }}";AWSScoreUpdatedTopicARN="${{ vars.AWS__ScoreUpdatedTopicARN }}"'
      
      - name: Push generated package to MyGet registry
        run: |
            dotnet nuget push **\*.nupkg -s https://www.myget.org/F/staplepuck/api/v2/package --skip-duplicate -k ${{ secrets.NUGET_API_KEY }}
